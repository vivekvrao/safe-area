{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\r\nconst SafeArea = registerPlugin('SafeArea', {\r\n    web: () => import('./web').then((m) => new m.SafeAreaWeb()),\r\n});\r\nfunction setProperty(position) {\r\n    var _a;\r\n    if (typeof document !== 'undefined') {\r\n        const rootStyle = (_a = document.querySelector(':root')) === null || _a === void 0 ? void 0 : _a.style;\r\n        const currentValue = rootStyle === null || rootStyle === void 0 ? void 0 : rootStyle.getPropertyValue(`--safe-area-inset-${position}`);\r\n        if (!currentValue) {\r\n            // If a value is already present,\r\n            // we can assume we do not have to set an initial value.\r\n            // Probably the native code has already set a property.\r\n            // Otherwise the developer or another plugin has set this value.\r\n            rootStyle === null || rootStyle === void 0 ? void 0 : rootStyle.setProperty(`--safe-area-inset-${position}`, `max(env(safe-area-inset-${position}), 0px)`);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Set initial safe area values.\r\n * This makes sure `var(--safe-area-inset-*)` values can be used immediately and everywhere.\r\n * This method will be automatically called.\r\n *\r\n * Note for developers using SSR:\r\n * Only in an SSR environment this method will not necessarily be executed.\r\n * So if you're using this plugin in an SSR environment,\r\n * you should call this method as soon as `window.document` becomes available.\r\n */\r\nfunction initialize() {\r\n    setProperty('top');\r\n    setProperty('left');\r\n    setProperty('bottom');\r\n    setProperty('right');\r\n}\r\ninitialize();\r\nexport * from './definitions';\r\nexport { SafeArea, initialize };\r\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\r\nexport class SafeAreaWeb extends WebPlugin {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    async enable(_options) {\r\n        return;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    async disable(_options) {\r\n        return;\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":";;;AACK,UAAC,QAAQ,GAAGA,mBAAc,CAAC,UAAU,EAAE;IAC5C,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/D,CAAC,EAAE;IACH,SAAS,WAAW,CAAC,QAAQ,EAAE;IAC/B,IAAI,IAAI,EAAE,CAAC;IACX,IAAI,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;IACzC,QAAQ,MAAM,SAAS,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,SAAM,GAAG,SAAM,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/G,QAAQ,MAAM,YAAY,GAAG,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,SAAM,GAAG,SAAM,GAAG,SAAS,CAAC,gBAAgB,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/I,QAAQ,IAAI,CAAC,YAAY,EAAE;IAC3B;IACA;IACA;IACA;IACA,YAAY,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,SAAM,GAAG,SAAM,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,wBAAwB,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACvK,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,UAAU,GAAG;IACtB,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;IACvB,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;IACxB,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC1B,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IACD,UAAU,EAAE;;ICjCL,MAAM,WAAW,SAASC,cAAS,CAAC;IAC3C;IACA,IAAI,MAAM,MAAM,CAAC,QAAQ,EAAE;IAC3B,QAAQ,OAAO;IACf,KAAK;IACL;IACA,IAAI,MAAM,OAAO,CAAC,QAAQ,EAAE;IAC5B,QAAQ,OAAO;IACf,KAAK;IACL;;;;;;;;;;;;;;;;"}