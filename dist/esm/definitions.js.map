{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,wCAAwC","sourcesContent":["/// <reference types=\"@capacitor/cli\" />\r\n\r\nexport interface Config {\r\n  /**\r\n   * Flag indicating that you are responsible for drawing the background color for the system bars.\r\n   * If `false` it will fallback to the default colors for the system bars.\r\n   *\r\n   * @example true\r\n   * @default true\r\n   */\r\n  customColorsForSystemBars?: boolean;\r\n  /**\r\n   * Specifies the background color of the status bar.\r\n   * Should be in the format `#RRGGBB` or `#AARRGGBB`.\r\n   * Will only have effect if `customColorsForSystemBars` is set to `true`.\r\n   *\r\n   * @example '#000000'\r\n   * @default '#000000'\r\n   */\r\n  statusBarColor?: string;\r\n  /**\r\n   * Specifies the color of the content (i.e. icon color) in the status bar.\r\n   *\r\n   * @example 'light'\r\n   * @default 'light'\r\n   */\r\n  statusBarContent?: 'light' | 'dark';\r\n  /**\r\n   * Specifies the background color of the navigation bar.\r\n   * Should be in the format `#RRGGBB` or `#AARRGGBB`.\r\n   * Will only have effect if `customColorsForSystemBars` is set to `true`.\r\n   *\r\n   * @example '#000000'\r\n   * @default '#000000'\r\n   */\r\n  navigationBarColor?: string;\r\n  /**\r\n   * Specifies the color of the content (i.e. icon color) in the navigation bar.\r\n   *\r\n   * @example 'light'\r\n   * @default 'light'\r\n   */\r\n  navigationBarContent?: 'light' | 'dark';\r\n  /**\r\n   * Specifies the offset to be applied to the safe area insets.\r\n   * This means that if the safe area top inset is 30px, and the offset specified is 10px,\r\n   * the safe area top inset will be exposed as being 40px.\r\n   * Usually you don't need this, but on iOS the safe area insets are mostly offset a little more\r\n   * by itself already. So you might want to compensate for that on Android. It's totally up to you.\r\n   * The offset will be applied if Edge-to-Edge mode is enabled only.\r\n   *\r\n   * @example 0\r\n   * @default 0\r\n   */\r\n  offset?: number;\r\n}\r\n\r\ndeclare module '@capacitor/cli' {\r\n  export interface PluginsConfig {\r\n    /**\r\n     * For ease of use and speed, these configuration values are available:\r\n     */\r\n    SafeArea?: {\r\n      /**\r\n       * Flag indicating whether of not the plugin should be enabled from startup.\r\n       *\r\n       * @example true\r\n       * @default false\r\n       */\r\n      enabled?: boolean;\r\n      /**\r\n       * Flag indicating that you are responsible for drawing the background color for the system bars.\r\n       * If `false` it will fallback to the default colors for the system bars.\r\n       *\r\n       * @example true\r\n       * @default true\r\n       */\r\n      customColorsForSystemBars?: boolean;\r\n      /**\r\n       * Specifies the background color of the status bar.\r\n       * Should be in the format `#RRGGBB` or `#AARRGGBB`.\r\n       * Will only have effect if `customColorsForSystemBars` is set to `true`.\r\n       *\r\n       * @example '#000000'\r\n       * @default '#000000'\r\n       */\r\n      statusBarColor?: string;\r\n      /**\r\n       * Specifies the color of the content (i.e. icon color) in the status bar.\r\n       *\r\n       * @example 'light'\r\n       * @default 'light'\r\n       */\r\n      statusBarContent?: 'light' | 'dark';\r\n      /**\r\n       * Specifies the background color of the navigation bar.\r\n       * Should be in the format `#RRGGBB` or `#AARRGGBB`.\r\n       * Will only have effect if `customColorsForSystemBars` is set to `true`.\r\n       *\r\n       * @example '#000000'\r\n       * @default '#000000'\r\n       */\r\n      navigationBarColor?: string;\r\n      /**\r\n       * Specifies the color of the content (i.e. icon color) in the navigation bar.\r\n       *\r\n       * @example 'light'\r\n       * @default 'light'\r\n       */\r\n      navigationBarContent?: 'light' | 'dark';\r\n      /**\r\n       * Specifies the offset to be applied to the safe area insets.\r\n       * This means that if the safe area top inset is 30px, and the offset specified is 10px,\r\n       * the safe area top inset will be exposed as being 40px.\r\n       * Usually you don't need this, but on iOS the safe area insets are mostly offset a little more\r\n       * by itself already. So you might want to compensate for that on Android. It's totally up to you.\r\n       * The offset will be applied if Edge-to-Edge mode is enabled only.\r\n       *\r\n       * @example 0\r\n       * @default 0\r\n       */\r\n      offset?: number;\r\n    };\r\n  }\r\n}\r\n\r\nexport interface SafeAreaPlugin {\r\n  enable(options: { config: Config }): Promise<void>;\r\n\r\n  disable(options: { config: Config }): Promise<void>;\r\n}\r\n"]}