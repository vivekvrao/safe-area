{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAIjD,MAAM,QAAQ,GAAG,cAAc,CAAiB,UAAU,EAAE;IAC1D,GAAG,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;CAC5D,CAAC,CAAC;AAEH,SAAS,WAAW,CAAC,QAA6C;;IAChE,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;QACnC,MAAM,SAAS,SAAG,QAAQ,CAAC,aAAa,CAAc,OAAO,CAAC,0CAAE,KAAK,CAAC;QAEtE,MAAM,YAAY,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,gBAAgB,CAAC,qBAAqB,QAAQ,EAAE,CAAC,CAAC;QAElF,IAAI,CAAC,YAAY,EAAE;YACjB,iCAAiC;YACjC,wDAAwD;YACxD,uDAAuD;YACvD,gEAAgE;YAChE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,CAAC,qBAAqB,QAAQ,EAAE,EAAE,2BAA2B,QAAQ,SAAS,EAAE;SACvG;KACF;AACH,CAAC;AAED;;;;;;;;;GASG;AACH,SAAS,UAAU;IACjB,WAAW,CAAC,KAAK,CAAC,CAAC;IACnB,WAAW,CAAC,MAAM,CAAC,CAAC;IACpB,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtB,WAAW,CAAC,OAAO,CAAC,CAAC;AACvB,CAAC;AAED,UAAU,EAAE,CAAC;AAEb,cAAc,eAAe,CAAC;AAC9B,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\r\n\r\nimport type { SafeAreaPlugin } from './definitions';\r\n\r\nconst SafeArea = registerPlugin<SafeAreaPlugin>('SafeArea', {\r\n  web: () => import('./web').then((m) => new m.SafeAreaWeb()),\r\n});\r\n\r\nfunction setProperty(position: 'top' | 'left' | 'bottom' | 'right') {\r\n  if (typeof document !== 'undefined') {\r\n    const rootStyle = document.querySelector<HTMLElement>(':root')?.style;\r\n\r\n    const currentValue = rootStyle?.getPropertyValue(`--safe-area-inset-${position}`);\r\n\r\n    if (!currentValue) {\r\n      // If a value is already present,\r\n      // we can assume we do not have to set an initial value.\r\n      // Probably the native code has already set a property.\r\n      // Otherwise the developer or another plugin has set this value.\r\n      rootStyle?.setProperty(`--safe-area-inset-${position}`, `max(env(safe-area-inset-${position}), 0px)`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Set initial safe area values.\r\n * This makes sure `var(--safe-area-inset-*)` values can be used immediately and everywhere.\r\n * This method will be automatically called.\r\n *\r\n * Note for developers using SSR:\r\n * Only in an SSR environment this method will not necessarily be executed.\r\n * So if you're using this plugin in an SSR environment,\r\n * you should call this method as soon as `window.document` becomes available.\r\n */\r\nfunction initialize(): void {\r\n  setProperty('top');\r\n  setProperty('left');\r\n  setProperty('bottom');\r\n  setProperty('right');\r\n}\r\n\r\ninitialize();\r\n\r\nexport * from './definitions';\r\nexport { SafeArea, initialize };\r\n"]}